{"ast":null,"code":"var _jsxFileName = \"/home/webapp/ProjectRTMPSerwis/videoSerwis/src/main/webapp/front/src/Components/UserAdmin.js\";\nimport React from \"react\";\nimport { Dropdown, Card } from \"react-bootstrap\";\nimport { ip } from \"./config/config.json\";\nimport axios from \"axios\";\nimport Avatar from \"react-avatar\";\nimport \"./css/Login.css\";\n\nclass UserAdmin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      selected: \"1\",\n      userId: '',\n      text: '',\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: 'http://' + ip + ':8080/getUsersById?userId=' + this.props.match.params.userId\n    }).then(response => response.data).then(data => {\n      this.setState({\n        user: data\n      });\n      this.setState({\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isLoaded === true) return /*#__PURE__*/React.createElement(Card, {\n      className: \"border border-light bg-light text-black\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      name: this.state.user.login,\n      size: \"50\",\n      round: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(\"b\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 24\n      }\n    }, this.state.user.login)), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, 'HEAD_ADMIN' === localStorage.getItem('typeOfUser') ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, this.state.user.role.roleName === 'HEAD_ADMIN' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }, \"Nie mo\\u017Cna nic zrobi\\u0107. Wszelkie zmiany musz\\u0105 zosta\\u0107 wykoane z posiomu serwara bazy danych.\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }\n    }, \"Custom toggle\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }\n    }, \"Red\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }\n    }, \"Blue\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: \"3\",\n      active: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 45\n      }\n    }, \"Orange\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 45\n      }\n    }, \"Red-Orange\"))))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    })));else return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }\n    }, \"Loading!\");\n  }\n\n}\n\nexport default UserAdmin;","map":{"version":3,"sources":["/home/webapp/ProjectRTMPSerwis/videoSerwis/src/main/webapp/front/src/Components/UserAdmin.js"],"names":["React","Dropdown","Card","ip","axios","Avatar","UserAdmin","Component","constructor","props","state","isLoaded","selected","userId","text","user","componentDidMount","method","url","match","params","then","response","data","setState","render","login","localStorage","getItem","role","roleName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Dropdown, Card,} from \"react-bootstrap\";\nimport {ip} from \"./config/config.json\"\nimport axios from \"axios\";\nimport Avatar from \"react-avatar\";\nimport \"./css/Login.css\";\n\nclass UserAdmin extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded:false,\n            selected:\"1\",\n            userId: '',\n            text: '',\n            user: []\n        };\n\n\n    }\n\n    componentDidMount() {\n        axios({\n            method:'get',\n            url:'http://'+ip+':8080/getUsersById?userId='+this.props.match.params.userId,\n        }).then(response => response.data)\n            .then((data) =>{\n                this.setState({user: data});\n                this.setState({isLoaded: true});\n\n            });\n    }\n\n\n    render() {\n        if(this.state.isLoaded===true)\n            return (\n\n                <Card className={\"border border-light bg-light text-black\"}>\n                   <Card.Header>\n                       <Avatar name={this.state.user.login} size=\"50\" round={true}></Avatar>\n                       <b className={\"login\"}>{this.state.user.login}</b>\n                   </Card.Header>\n                    <Card.Body>\n                        {'HEAD_ADMIN' === localStorage.getItem('typeOfUser')?\n                        <div>\n                            {this.state.user.role.roleName==='HEAD_ADMIN' ?\n                                <div>\n                                    <b>Nie można nic zrobić. Wszelkie zmiany muszą zostać wykoane z posiomu serwara bazy danych.</b>\n                                </div>\n                            :\n                                <div>\n\n                                    <Dropdown>\n                                        <Dropdown.Toggle >\n                                            Custom toggle\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu >\n                                            <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"3\" active>\n                                                Orange\n                                            </Dropdown.Item>\n                                            <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n\n                                </div>\n                            }\n\n                        </div>\n                            :\n                            <div>\n\n                            </div>\n                        }\n                    </Card.Body>\n\n                </Card>\n\n            );else return(<h1>Loading!</h1>)\n\n\n    }\n\n}\n\n\nexport default UserAdmin;"]},"metadata":{},"sourceType":"module"}